var app=function(){"use strict";function t(){}function e(t){return t()}function n(){return Object.create(null)}function o(t){t.forEach(e)}function r(t){return"function"==typeof t}function i(t,e){return t!=t?e==e:t!==e||t&&"object"==typeof t||"function"==typeof t}function c(t,e){t.appendChild(e)}function a(t){t.parentNode.removeChild(t)}function s(t){return document.createElement(t)}function l(){return t=" ",document.createTextNode(t);var t}function u(t,e,n,o){return t.addEventListener(e,n,o),()=>t.removeEventListener(e,n,o)}function h(t,e,n){null==n?t.removeAttribute(e):t.getAttribute(e)!==n&&t.setAttribute(e,n)}function f(t,e){(null!=e||t.value)&&(t.value=e)}let p;function d(t){p=t}const g=[],m=[],b=[],x=[],$=Promise.resolve();let y=!1;function v(t){b.push(t)}let w=!1;const S=new Set;function C(){if(!w){w=!0;do{for(let t=0;t<g.length;t+=1){const e=g[t];d(e),k(e.$$)}for(g.length=0;m.length;)m.pop()();for(let t=0;t<b.length;t+=1){const e=b[t];S.has(e)||(S.add(e),e())}b.length=0}while(g.length);for(;x.length;)x.pop()();y=!1,w=!1,S.clear()}}function k(t){if(null!==t.fragment){t.update(),o(t.before_update);const e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(v)}}const _=new Set;function E(t,e){-1===t.$$.dirty[0]&&(g.push(t),y||(y=!0,$.then(C)),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function G(i,c,s,l,u,h,f=[-1]){const g=p;d(i);const m=c.props||{},b=i.$$={fragment:null,ctx:null,props:h,update:t,not_equal:u,bound:n(),on_mount:[],on_destroy:[],before_update:[],after_update:[],context:new Map(g?g.$$.context:[]),callbacks:n(),dirty:f};let x=!1;if(b.ctx=s?s(i,m,(t,e,...n)=>{const o=n.length?n[0]:e;return b.ctx&&u(b.ctx[t],b.ctx[t]=o)&&(b.bound[t]&&b.bound[t](o),x&&E(i,t)),e}):[],b.update(),x=!0,o(b.before_update),b.fragment=!!l&&l(b.ctx),c.target){if(c.hydrate){const t=function(t){return Array.from(t.childNodes)}(c.target);b.fragment&&b.fragment.l(t),t.forEach(a)}else b.fragment&&b.fragment.c();c.intro&&(($=i.$$.fragment)&&$.i&&(_.delete($),$.i(y))),function(t,n,i){const{fragment:c,on_mount:a,on_destroy:s,after_update:l}=t.$$;c&&c.m(n,i),v(()=>{const n=a.map(e).filter(r);s?s.push(...n):o(n),t.$$.on_mount=[]}),l.forEach(v)}(i,c.target,c.anchor),C()}var $,y;d(g)}function M(e){let n,r,i,p,d,g,m,b,x,$,y,v,w,S,C,k,_;return{c(){n=s("main"),r=s("h1"),r.textContent="Welcome!",i=l(),p=s("i"),p.innerHTML='Functionality is very limited for now, feel free to contribute on <a href="https://github.com/bring-shrubbery/SVG-to-SwiftUI" target="_blank">Github</a>.',d=l(),g=s("h2"),g.textContent="Paste SVG code below:",m=l(),b=s("div"),x=s("textarea"),$=l(),y=s("button"),y.textContent="Convert to SwiftUI Shape!",v=l(),w=s("h2"),w.textContent="Swift code wil be shown below:",S=l(),C=s("div"),k=s("textarea"),h(r,"class","svelte-171vyev"),h(x,"class","svelte-171vyev"),k.value=e[1],h(k,"id","swift-output-area"),h(k,"class","svelte-171vyev"),h(n,"class","svelte-171vyev")},m(t,a,s){!function(t,e,n){t.insertBefore(e,n||null)}(t,n,a),c(n,r),c(n,i),c(n,p),c(n,d),c(n,g),c(n,m),c(n,b),c(b,x),f(x,e[0]),c(n,$),c(n,y),c(n,v),c(n,w),c(n,S),c(n,C),c(C,k),s&&o(_),_=[u(x,"input",e[13]),u(y,"click",e[2])]},p(t,[e]){1&e&&f(x,t[0]),2&e&&(k.value=t[1])},i:t,o:t,d(t){t&&a(n),o(_)}}}function P(t,e,n){let o="",r="",i={};const c=t=>`path.move(to: CGPoint(x: ${t.x/i.width}*width, y: ${t.y/i.height}*height))`,a=t=>`path.addLine(to: CGPoint(x: ${t.x/i.width}*width, y: ${t.y/i.height}*height))`,s=t=>"path.closeSubpath()",l=t=>[`path.addCurve(to: CGPoint(x: ${t.p.x/i.width}*width, y: ${t.p.y/i.height}*height),`,`control1: CGPoint(x: ${t.c1.x/i.width}*width, y: ${t.c1.y/i.height}*height),`,`control2: CGPoint(x: ${t.c2.x/i.width}*width, y: ${t.c2.y/i.height}*height))`].join(" "),u=t=>{const e=[...t.points];let n=[];for(let t=0;t<e.length;t++){const o=e[t];switch(o.flag){case"M":n.push(c(o));break;case"L":n.push(a(o));break;case"C":const r=e[t+1],i=e[t+2];n.push(l({p:i,c1:o,c2:r}));break;case"Z":n.push("path.closeSubpath()");break;case"H":console.log("Horizontal lines are not implemented!");break;case"V":console.log("Vertical lines are not implemented!");break;case"S":console.log("S lines are not implemented!");break;case"Q":console.log("Q lines are not implemented!");break;case"T":console.log("T lines are not implemented!");break;case"A":console.log("A lines are not implemented!");break;default:console.log("HMMMMMmmmmm")}}return console.log(n),[`struct ${t.title}: Shape {`,"    func path(in rect: CGRect) -> Path {","        var path = Path()","        let width = rect.size.width","        let height = rect.size.height","",...n.map(t=>"        "+t),"","        return path","    }","}"].join("\n")},h=t=>{console.log(t);return RegExp(/\<path(.|\n|\r)*((\><\/path\>)|(\/\>))/).exec(t)},f=t=>{console.log(t);return RegExp(/\sd\=\"(.|\n|\r)+\"(\s|\>)(?!\<\/path\>)/).exec(t)},p=t=>(t=String(t).trim(),String(t).split(" ").map(t=>{let e="";RegExp(/^\D/).test(t[0])&&(e=t[0],t=t.substring(1));const n=String(t).split(",").map(t=>parseFloat(t));return{flag:e,x:n[0],y:n[1]}})),d=t=>{let e=String(t);const n=String(RegExp(/\swidth\=\".*\"/).exec(e)),o=String(RegExp(/\sheight\=\".*\"/).exec(e));if("undefined"!=n&&"undefined"!=o)return{width:parseInt(n.substring(8,n.length-2)),height:parseInt(o.substring(9,o.length-2))}};return[o,r,()=>{i=d(o),console.log(i);const t=h(o)[0],e=f(t)[0].substring(4,t.length-2),c=p(e);console.log(c);const a=u({title:"MyCustomShape",points:c});n(1,r=a)},i,c,a,s,l,u,h,f,p,d,function(){o=this.value,n(0,o)}]}return new class extends class{$destroy(){!function(t,e){const n=t.$$;null!==n.fragment&&(o(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}(this,1),this.$destroy=t}$on(t,e){const n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}$set(){}}{constructor(t){super(),G(this,t,P,M,i,{})}}({target:document.body,props:{name:"world"}})}();
//# sourceMappingURL=bundle.js.map
